services:
  postgres:
    image: postgres:16-alpine
    container_name: mvppir-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mvppir
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mvppir-network

  redis:
    image: redis:7-alpine
    container_name: mvppir-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - mvppir-network

  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: mvppir-api
  #   restart: unless-stopped
  #   ports:
  #     - "4000:4000"
  #   environment:
  #     DATABASE_URL: postgresql://postgres:postgres@postgres:5432/mvppir?schema=public
  #     PORT: 4000
  #     NODE_ENV: production
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - mvppir-network

volumes:
  postgres_data:
  redis_data:

networks:
  mvppir-network:
    driver: bridge
